#!/bin/bash

# find the ip of a docker container via id|name
docker-ip() {
    docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$1"
}

# start docker container if stopped then attach, and attach if already started
da() {
    local name=$1
    local state
    state=$(docker inspect -f "{{.State.Running}}" "$name" 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker start "$name"; docker attach "$name"
    else
        docker attach "$name"
    fi
}

# clean up containers volumes and images
docker-cleanup() {
    docker system prune -a
}

# delete container if it's not running
docker-del-stopped() {
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm "$name"
	fi
}

# stop all running containers
docker-stop-all() {
    docker stop "$(docker ps -a -q)"
}

# remove all stopped docker containers
docker-remove-all() {
    docker rm "$(docker ps -a -q)"
}

# shorter docker ps output
dps() {
    docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}'
}

pihole(){
	docker exec pihole pihole "$@"
}

