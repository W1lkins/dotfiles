#!/bin/bash

# find the ip of a docker container via id|name
docker-ip() {
    docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$1"
}

# start docker container if stopped then attach, and attach if already started
da() {
    local name=$1
    local state
    state=$(docker inspect -f "{{.State.Running}}" "$name" 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker start "$name"; docker attach "$name"
    else
        docker attach "$name"
    fi
}

# clean up containers volumes and images
docker-cleanup() {
	local containers
	containers=( $(docker ps -aq 2>/dev/null) )
	docker rm "${containers[@]}" 2>/dev/null
	local volumes
	volumes=( $(docker ps --filter status=exited -q 2>/dev/null) )
	docker rm -v "${volumes[@]}" 2>/dev/null
	local images
	images=( $(docker images --filter dangling=true -q 2>/dev/null) )
	docker rmi "${images[@]}" 2>/dev/null
}

# delete container if it's not running
docker-del-stopped() {
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm "$name"
	fi
}

# stop all running containers
docker-stop-all() {
  docker stop "$(docker ps -a -q)"
}

# remove all stopped docker containers
docker-remove-all() {
  docker rm "$(docker ps -a -q)"
}

